{"version":3,"sources":["img/logo.png","components/Login.js","components/Signup.js","App.js","index.js"],"names":["module","exports","sha256","require","Login","props","onSubmit","e","preventDefault","state","email","password","hashedPassword","fetch","then","res","ok","json","console","log","data","user","find","alert","onEmailInput","setState","target","value","onPasswordInput","className","this","htmlFor","type","id","onChange","to","React","Component","Signup","handleSubmit","name","publicKey","userSameEmail","userSamePublicKey","newUser","method","mode","cache","credentials","headers","redirect","referrerPolicy","body","JSON","stringify","status","handleChange","toDashboard","App","src","logo","component","exact","path","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.fe7a981a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.c689c583.png\";","import React from 'react';\r\nimport { Link } from 'react-router-dom';\r\nconst sha256 = require('sha256');\r\n\r\nclass Login extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { email: '', password: '' };\r\n  }\r\n\r\n  onSubmit = (e) => {\r\n    e.preventDefault();\r\n    const formFilled = this.state.email !== '' && this.state.password !== '';\r\n\r\n    if (formFilled) {\r\n      const email = this.state.email;\r\n      const hashedPassword = sha256(this.state.password);\r\n\r\n      fetch('https://blocktrade-api.herokuapp.com/users')\r\n        .then(res => {\r\n          if (res.ok) return res.json();\r\n          else console.log(res);\r\n        })\r\n        .then(data => {\r\n          const user = data.find(user => user.email === email);\r\n\r\n          if (user) {\r\n            // check password\r\n            if (hashedPassword === user.password) {\r\n              console.log('authenticated!');\r\n              console.log(user);\r\n\r\n              // REDIRECT TO DASHBOARD\r\n\r\n            } else {\r\n              // prompt wrong password\r\n              alert('incorrect password')\r\n            }\r\n          } else {\r\n            // prompt no such user\r\n            alert('user doesnt exist');\r\n          }\r\n        })\r\n    } else {\r\n      // prompt to fill form\r\n      alert('please fill the form')\r\n    }\r\n  }\r\n\r\n  onEmailInput = (e) => {\r\n    this.setState({ email: e.target.value });\r\n  }\r\n\r\n  onPasswordInput = (e) => {\r\n    this.setState({ password: e.target.value });\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className=\"Login\">\r\n        <form onSubmit={this.onSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email address</label>\r\n            <input type=\"email\" className=\"form-control\" id=\"email\" onChange={this.onEmailInput} />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" className=\"form-control\" id=\"password\" onChange={this.onPasswordInput} />\r\n          </div>\r\n          <button className=\"btn btn-outline-primary\">Login</button>\r\n        </form>\r\n        <Link to=\"/signup\">\r\n          <p>Not registered? Sign up here!</p>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Login;","import React from 'react';\r\nimport { Link, Redirect } from 'react-router-dom';\r\nconst sha256 = require('sha256');\r\n\r\nclass Signup extends React.Component {\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = { name: '', email: '', password: '', publicKey: '', toDashboard: false };\r\n  }\r\n\r\n  handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    const formFilled = this.state.name !== '' && this.state.email !== '' && this.state.password !== '' && this.state.publicKey !== '';\r\n\r\n    if (formFilled) {\r\n      const name = this.state.name;\r\n      const email = this.state.email;\r\n      const password = sha256(this.state.password);\r\n      const publicKey = this.state.publicKey;\r\n\r\n      // check if email or publicKey is already in the DB\r\n      fetch('https://blocktrade-api.herokuapp.com/users')\r\n        .then(res => {\r\n          if (res.ok) return res.json();\r\n          else console.log(res);\r\n        })\r\n        .then(data => {\r\n          const userSameEmail = data.find(user => user.email === email);\r\n          const userSamePublicKey = data.find(user => user.publicKey === publicKey);\r\n\r\n          if (userSameEmail || userSamePublicKey) {\r\n            alert('user with these credentials already exists')\r\n          } else {\r\n            // create a new account\r\n            const newUser = { name, email, password, publicKey }\r\n\r\n            fetch('https://blocktrade-api.herokuapp.com/users/add', {\r\n              method: 'POST',\r\n              mode: 'cors',\r\n              cache: 'no-cache',\r\n              credentials: 'same-origin',\r\n              headers: {\r\n                'Content-Type': 'application/json'\r\n              },\r\n              redirect: 'follow',\r\n              referrerPolicy: 'no-referrer',\r\n              body: JSON.stringify(newUser)\r\n            })\r\n              .then(res => {\r\n                if (res.status === 200) {\r\n                  console.log('user created');\r\n                  console.log(newUser);\r\n\r\n                  // REDIRECT TO DASHBOARD\r\n\r\n                } else {\r\n                  alert('server error - failed to create user');\r\n                  console.log(res);\r\n                }\r\n              })\r\n          }\r\n        });\r\n    } else {\r\n      alert('please complete the form')\r\n    }\r\n\r\n    // this.setState({ toDashboard: true })\r\n  }\r\n\r\n  handleChange = (e) => {\r\n    this.setState({\r\n      [e.target.name]: e.target.value\r\n    });\r\n  }\r\n\r\n  render() {\r\n    // if (this.state.toDashboard === true) {\r\n    //   return <Redirect to='/' />\r\n    // }\r\n\r\n    return (\r\n      <div className=\"Signup\" >\r\n        <form onSubmit={this.handleSubmit}>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"name\">Name</label>\r\n            <input type=\"name\" className=\"form-control\" name=\"name\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email address</label>\r\n            <input type=\"email\" className=\"form-control\" name=\"email\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input type=\"password\" className=\"form-control\" name=\"password\" onChange={this.handleChange} />\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"publicKey\">Public Key</label>\r\n            <input type=\"publicKey\" className=\"form-control\" name=\"publicKey\" onChange={this.handleChange} />\r\n          </div>\r\n          <button className=\"btn btn-outline-primary\">Sign Up</button>\r\n        </form>\r\n        <Link to=\"/\">\r\n          <p>Already have an account? Log in here!</p>\r\n        </Link>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Signup;","import React from 'react';\nimport { Link, Route, Switch } from 'react-router-dom';\n\nimport Login from './components/Login';\nimport Signup from './components/Signup';\nimport logo from './img/logo.png';\nimport './css/App.css';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <div id=\"wrapper\" className=\" container d-flex justify-content-center align-items-center\">\n        <div id=\"options\" className=\"d-flex flex-column align-items-center p-5\">\n          <img id=\"logo\" src={logo} />\n          <Route component={Login} exact path='/' />\n          <Route component={Signup} exact path='/signup' />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { BrowserRouter } from 'react-router-dom';\n\nimport './css/index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\n\nReactDOM.render(\n  <BrowserRouter>\n    <App />\n  </BrowserRouter>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}